/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package principal;

import Classes.RenderTable;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import reserva.Hotel;
import reserva.Vuelo;
import reserva.ModeloHotel;
import reserva.ModeloVuelo;
import reserva.ModeloPaises;
import reserva.Paises;
import reserva.Reserva1;

/**
 *
 * @author Favio
 */
public class Principal extends javax.swing.JFrame {
    /**
     * Creates new form Formulario
     */
    public Principal() {
        initComponents();
        llenarPaises();
        this.setLocationRelativeTo(null);
        MostrarTabla();
        reservar.setName("btnReservar");
        setResizable(false);
    }
    
    public static int columnaTable,rowTable;
    JButton reservar = new JButton("Reservar");
    JComboBox cmbBoxHoteles = new JComboBox();
    int contador =0;
    int valoracion =0;
    float precio =0;
    int colx = 4;
    int rowx = 0;
    //int count =0;
    
    String[] nombres = new String[20];
    Integer[] idVueloIda = new Integer[20];
    Integer[] idVueloVuelta = new Integer[20];
    Integer[] idHotel = new Integer[20];
    
    
    
    private void llenarPaises(){
        ModeloPaises obtpaises = new ModeloPaises();
        ArrayList<Paises> listapaises = obtpaises.obtenerPais();
        
        cmbOrigen.addItem("[Escoja origen]");
        for(int i=0;i<listapaises.size();i++){
            cmbOrigen.addItem(listapaises.get(i).getPais());
        }
        cmbDestino.addItem("[Escoja destino]");
        for(int i=0;i<listapaises.size();i++){
            cmbDestino.addItem(listapaises.get(i).getPais());
        }
    }
    
    public void limpiartabla(){
        DefaultTableModel temp = (DefaultTableModel) jTable1.getModel();
        int filas = jTable1.getRowCount();
        for (int a = 0; filas > a; a++) {
            temp.removeRow(0);
        }
    }
    public void MostrarTabla (){
        //jTable1.setModel(model);
        jTable1.getColumnModel().getColumn(3).setCellEditor(new DefaultCellEditor(cmbBoxHoteles));
        jTable1.setDefaultRenderer(Object.class, new RenderTable(3));
        jTable1.setRowHeight(40);
    }
    
    public Date sumarRestarDiasFecha(Date fecha, int dias){
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(fecha); // Configuramos la fecha que se recibe
        calendar.add(Calendar.DAY_OF_YEAR, dias);  // numero de días a añadir, o restar en caso de días<0
        return calendar.getTime(); // Devuelve el objeto Date con los nuevos días añadidos
    }
    
    public static Date ParseFecha(String fecha)
    {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaDate = null;
        try {
            fechaDate = formato.parse(fecha);
        } 
        catch (ParseException ex) 
        {
            System.out.println(ex);
        }
        return fechaDate;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbDestino = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        btnProcesar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        rSDateChooser1 = new rojeru_san.componentes.RSDateChooser();
        jchkbox1 = new javax.swing.JCheckBox();
        lblPrecio1 = new javax.swing.JLabel();
        cmbOrigen = new javax.swing.JComboBox<>();
        cmbdias = new javax.swing.JComboBox<>();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORIGEN:");

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ATERRIZA");

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DESTINO:");

        cmbDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDestinoActionPerformed(evt);
            }
        });

        lblPrecio.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        lblPrecio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrecio.setText("Fecha Ida:");

        btnProcesar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnProcesar.setText("BUSCAR");
        btnProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesarActionPerformed(evt);
            }
        });

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                if (colIndex == 3){
                    return true;}
                return false;
            }
        };
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Empresa", "Ida", "Vuelta", "Hotel", "Valoracion", "Precio Total", "Reservar"
            }
        ));
        jTable1.setRowHeight(25);
        jTable1.setRowMargin(12);
        jTable1.setShowGrid(true);
        jTable1.setSurrendersFocusOnKeystroke(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(170);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(80);
        }

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        rSDateChooser1.setColorBackground(new java.awt.Color(102, 153, 255));
        rSDateChooser1.setColorButtonHover(new java.awt.Color(102, 153, 255));
        rSDateChooser1.setColorDiaActual(new java.awt.Color(255, 153, 153));
        rSDateChooser1.setColorForeground(new java.awt.Color(102, 153, 255));
        rSDateChooser1.setFuente(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jchkbox1.setText("Aun no he decidido la fecha ");
        jchkbox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkbox1ActionPerformed(evt);
            }
        });

        lblPrecio1.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        lblPrecio1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrecio1.setText("Cantidad Días:");

        cmbOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrigenActionPerformed(evt);
            }
        });

        cmbdias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Seleccione una cantidad]", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(431, 431, 431)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(331, 331, 331))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jchkbox1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPrecio)
                            .addComponent(lblPrecio1))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rSDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbdias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel7)
                .addContainerGap(59, Short.MAX_VALUE))
            .addComponent(jSeparator3)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(486, 486, 486)
                        .addComponent(btnProcesar)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel7)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(5, 5, 5)
                                    .addComponent(lblPrecio))
                                .addComponent(rSDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblPrecio1)
                                .addComponent(cmbdias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(23, 23, 23))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3)
                                .addComponent(cmbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jchkbox1)
                            .addGap(18, 18, 18))))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(btnProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDestinoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbDestinoActionPerformed

    private void btnProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesarActionPerformed
        // TODO add your handling code here:
        limpiartabla();
        ModeloVuelo obtlineaaerea = new ModeloVuelo();
        ModeloHotel obthotel = new ModeloHotel();
        ArrayList<Vuelo> listaLineaAerea = obtlineaaerea.obtenerLineaAerea();
        ArrayList<Hotel> listaHotel = obthotel.obtenerHotel();
        
        //Cambia el formato obtenido del calendario
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        
        for(int i=0;i<listaLineaAerea.size();i++){
            if(cmbOrigen.getSelectedIndex()==listaLineaAerea.get(i).getOrigen() && cmbDestino.getSelectedIndex()==listaLineaAerea.get(i).getDestino()){
                if(jchkbox1.isSelected()){
                    String data1 = listaLineaAerea.get(i).getNombreAerolinea();
                    String data2 = listaLineaAerea.get(i).getHora();
                    String data3 = "";
                    String data4 = "Selecciona Hotel";
                    String data5 = "";
                    String data6 = "";
                    
                    float regreso=0 ;
                    for(int e=0;e<listaLineaAerea.size();e++){
                        if(cmbDestino.getSelectedIndex()==listaLineaAerea.get(e).getOrigen() && cmbOrigen.getSelectedIndex()==listaLineaAerea.get(e).getDestino()){
                            data3 = listaLineaAerea.get(e).getHora();
                            regreso = listaLineaAerea.get(e).getPrecio();
                            idVueloVuelta[contador]=listaLineaAerea.get(e).getIdVuelo();
                        }
                        
                    }
                    
                    for(int x=0;x<listaHotel.size();x++){
                        if(cmbDestino.getSelectedIndex()==listaHotel.get(x).getUbicacion()){
                            if(contador<1){
                                cmbBoxHoteles.addItem(listaHotel.get(x).getNombreHotel());
                            }
                            data5 =  String.valueOf(valoracion);
                        }                     
                    }
                    data6 = String.valueOf(listaLineaAerea.get(i).getPrecio()+regreso);
                    
                    nombres[contador]= data6;
                    idVueloIda[contador]= listaLineaAerea.get(i).getIdVuelo();
                    
                    contador+=1;
                    Object[] row = { data1, data2, data3, data4, data5, data6, reservar};
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.addRow(row);
                    
                }
                else{
                    if(rSDateChooser1.getDatoFecha() == null){
                        JOptionPane.showMessageDialog(null,"Selecciona una fecha", "Mensaje en la barra de titulo", JOptionPane.WARNING_MESSAGE);
                    }
                    
                    else{
                        if(sdf.format(rSDateChooser1.getDatoFecha()).equals(sdf.format(listaLineaAerea.get(i).getHorario()))){
                        
                        String data1 = listaLineaAerea.get(i).getNombreAerolinea();
                        String data2 = listaLineaAerea.get(i).getHora();
                        String data3 = "";
                        String data4 = "Selecciona Hotel";
                        String data5 = "";
                        String data6 = "";
                        float regreso=0 ;
                        for(int e=0;e<listaLineaAerea.size();e++){
                            if(cmbDestino.getSelectedIndex()==listaLineaAerea.get(e).getOrigen() && cmbOrigen.getSelectedIndex()==listaLineaAerea.get(e).getDestino()){
                                if(sdf.format(sumarRestarDiasFecha(rSDateChooser1.getDatoFecha(),cmbdias.getItemCount()-12)).equals(sdf.format(listaLineaAerea.get(e).getHorario()))){
                                    data3 = listaLineaAerea.get(e).getHora();
                                    regreso = listaLineaAerea.get(e).getPrecio();
                                    idVueloVuelta[contador]=listaLineaAerea.get(e).getIdVuelo();
                                }
                                
                            }                     
                        }
                        for(int x=0;x<listaHotel.size();x++){
                            if(cmbDestino.getSelectedIndex()==listaHotel.get(x).getUbicacion()){
                                if(contador<1){
                                    cmbBoxHoteles.addItem(listaHotel.get(x).getNombreHotel());
                                }
                                data5 =  String.valueOf(valoracion);
                            }                     
                        }
                        data6 = String.valueOf(listaLineaAerea.get(i).getPrecio()+regreso);
                        
                        nombres[contador]= data6;
                        idVueloIda[contador]= listaLineaAerea.get(i).getIdVuelo();
                        
                        contador+=1;
                        Object[] row = { data1, data2, data3, data4, data5, data6, reservar};
                        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                        model.addRow(row);
                        
                        }
                    }
                }
            }
            
        }
        
        cmbBoxHoteles.addActionListener((ActionEvent e) -> {
            // Aquí hacemos lo que queramos hacer.
            for(int lh = 0; lh <listaHotel.size();lh++){
                if(listaHotel.get(lh).getNombreHotel().equals(String.valueOf(cmbBoxHoteles.getSelectedItem()))){
                    valoracion = listaHotel.get(lh).getValoracion();
                    precio = listaHotel.get(lh).getPrecio();

                    colx = jTable1.getColumnModel().getColumnIndexAtX(cmbBoxHoteles.getX());
                    rowx = cmbBoxHoteles.getY()/jTable1.getRowHeight();

                    String valorStr = String.valueOf(nombres[rowx]);
                    Float precio1 = Float.parseFloat(valorStr);
                    String preciototal = String.valueOf((Float)(precio1+precio));
                    jTable1.setValueAt(preciototal, rowx, colx+2);
                    jTable1.setValueAt(valoracion, rowx, colx+1);

                    idHotel[rowx]= listaHotel.get(lh).getIdHotel();
                }
            }
            
        });
        contador=0;
    }//GEN-LAST:event_btnProcesarActionPerformed

    private void jchkbox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkbox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkbox1ActionPerformed

    private void cmbOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbOrigenActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        columnaTable = jTable1.getColumnModel().getColumnIndexAtX(evt.getX());
        rowTable = evt.getY()/jTable1.getRowHeight();
        
        if(columnaTable<=jTable1.getColumnCount() && columnaTable>=0 && rowTable<=jTable1.getRowCount() && rowTable>=0){
            Object objeto = jTable1.getValueAt(rowTable, columnaTable);
            if(objeto instanceof JButton){
                ((JButton)objeto).doClick();
                JButton botones =(JButton)objeto;
                if(botones.getName().equals("btnReservar")){
                    Reserva1 reservacion = new Reserva1(idVueloIda[rowTable],idVueloVuelta[rowTable],idHotel[rowTable]);
                    reservacion.setVisible(true);
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcesar;
    private javax.swing.JComboBox<String> cmbDestino;
    private javax.swing.JComboBox<String> cmbOrigen;
    private javax.swing.JComboBox<String> cmbdias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JCheckBox jchkbox1;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblPrecio1;
    private rojeru_san.componentes.RSDateChooser rSDateChooser1;
    // End of variables declaration//GEN-END:variables
}
